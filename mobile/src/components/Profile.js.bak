import React, { useState, useEffect } from 'react';
import { TextInput, Button, View, Text, Image, StyleSheet } from 'react-native';
import api from '../api/api';

function Profile({ user }) {
    const [profile, setProfile] = useState(user);
    const [editMode, setEditMode] = useState(false);
    const [password, setPassword] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const [passwordError, setPasswordError] = useState('');

    useEffect(() => {
        setProfile(user);
    }, [user]);

    const handleInputChange = (name, value) => {
        setProfile((prevProfile) => ({ ...prevProfile, [name]: value }));
    };

    const toggleEditMode = () => {
        setEditMode(!editMode);
        setPassword('');
        setConfirmPassword('');
        setPasswordError('');
    };

    const handleSave = async () => {
        if (password && password !== confirmPassword) {
            setPasswordError('密码不一致，请重新输入');
            return;
        }

        try {
            await api.put('/user/profile', {
                email: profile.email,
                phone: profile.phone,
                password: password || undefined,
            });
            setEditMode(false);
        } catch (error) {
            alert("保存用户信息失败");
        }
    };

    return (
        <View style={styles.container}>
            <Text style={styles.title}>个人信息</Text>
            <Image
                source={{ uri: profile.avatar || '默认头像路径' }}
                style={styles.avatar}
            />
            <TextInput
                style={styles.input}
                placeholder="用户名"
                value={profile.username}
                editable={false}
            />
            <TextInput
                style={styles.input}
                placeholder="显示名"
                value={profile.displayName}
                editable={editMode}
                onChangeText={(value) => handleInputChange('displayName', value)}
            />
            <TextInput
                style={styles.input}
                placeholder="邮箱"
                value={profile.email}
                editable={editMode}
                onChangeText={(value) => handleInputChange('email', value)}
            />
            <TextInput
                style={styles.input}
                placeholder="电话"
                value={profile.phone}
                editable={editMode}
                onChangeText={(value) => handleInputChange('phone', value)}
            />
            {editMode && (
                <>
                    <TextInput
                        style={styles.input}
                        placeholder="新密码"
                        secureTextEntry
                        value={password}
                        onChangeText={setPassword}
                    />
                    <TextInput
                        style={styles.input}
                        placeholder="确认新密码"
                        secureTextEntry
                        value={confirmPassword}
                        onChangeText={setConfirmPassword}
                    />
                    {!!passwordError && <Text style={styles.error}>{passwordError}</Text>}
                </>
            )}
            <Button
                title={editMode ? "保存修改" : "修改个人信息"}
                onPress={editMode ? handleSave : toggleEditMode}
            />
        </View>
    );
}

const styles = StyleSheet.create({
    container: { padding: 16, backgroundColor: '#fff' },
    title: { fontSize: 20, marginBottom: 16 },
    avatar: { width: 100, height: 100, borderRadius: 50, marginBottom: 16 },
    input: { borderBottomWidth: 1, borderBottomColor: '#ccc', paddingVertical: 8, marginBottom: 16 },
    error: { color: 'red', marginBottom: 16 },
});

export default Profile;
